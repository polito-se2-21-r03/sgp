<?xml version="1.0" encoding="UTF-8"?>
<testExecutions version="1">
  <file path="/home/lupusdei/spg/server/__test__/index.test.js">
    <testCase name="Testing get all products tests the base route and returns an array of orders" duration="49"/>
    <testCase name="Testing get all orders tests the base route and returns an array of orders" duration="11"/>
    <testCase name="Testing  Insert a new order should return code 200" duration="28">
      <failure message="Error: expect(received).toBe(expected) // Object.is equality"><![CDATA[Error: expect(received).toBe(expected) // Object.is equality

Expected: 200
Received: 422
    at Object.it (/home/lupusdei/spg/server/__test__/index.test.js:117:29)
    at process._tickCallback (internal/process/next_tick.js:68:7)]]></failure>
    </testCase>
    <testCase name="Test getClientById Should get value from client table" duration="11"/>
    <testCase name="Test getEmployeeById Should get value from employee table" duration="6"/>
    <testCase name="Test checkProductAvailability Should get integer" duration="8"/>
    <testCase name="Test insertOrderProduct Should get orderId" duration="16"/>
    <testCase name="Test getAll from wallet tests the base route and returns an array of wallets" duration="9"/>
    <testCase name="Test update wallet tests the base route and return a wallet updated" duration="23"/>
    <testCase name="Test body validation tests the body of req and return with error for body not validawait models.wallet.findOne({where: {userId: req.params.id}})" duration="4"/>
    <testCase name="Test update wallet for valid client tests update of wallet for not valid client and return with error" duration="5"/>
  </file>
</testExecutions>